(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{434:function(t,r,_){"use strict";_.r(r);var v=_(51),e=Object(v.a)({},(function(){var t=this,r=t.$createElement,_=t._self._c||r;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"什么是微前端"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是微前端"}},[t._v("#")]),t._v(" "),_("a",{attrs:{href:"https://github.com/efoxTeam/emp/wiki/%E3%80%8A%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E5%89%8D%E7%AB%AF%E3%80%8B,https://swearer23.github.io/micro-frontends/",target:"_blank",rel:"noopener noreferrer"}},[t._v("什么是微前端"),_("OutboundLink")],1)]),t._v(" "),_("h2",{attrs:{id:"一、背景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、背景"}},[t._v("#")]),t._v(" 一、背景")]),t._v(" "),_("h3",{attrs:{id:"实现应用代码隔离"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#实现应用代码隔离"}},[t._v("#")]),t._v(" 实现应用代码隔离")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("单个应用单个库（"),_("code",[t._v("monoRepo")]),t._v(" -- "),_("code",[t._v("monolithic repository")]),t._v(" ）")])]),t._v(" "),_("li",[_("p",[t._v("单个应用多个库 ("),_("code",[t._v("multiRepo")]),t._v(" -- "),_("code",[t._v("multiple repository")]),t._v(")")])]),t._v(" "),_("li",[_("p",[t._v("多个应用多个库")]),t._v(" "),_("blockquote",[_("h4",{attrs:{id:"如何实现多个应用间的资源共享"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何实现多个应用间的资源共享"}},[t._v("#")]),t._v(" 如何实现多个应用间的资源共享")]),t._v(" "),_("h5",{attrs:{id:"npm包管理形式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#npm包管理形式"}},[t._v("#")]),t._v(" "),_("code",[t._v("npm")]),t._v("包管理形式")]),t._v(" "),_("p",[t._v("存在的问题")]),t._v(" "),_("ul",[_("li",[t._v("发布效率低下")]),t._v(" "),_("li",[t._v("多团队协作容易不规范")])]),t._v(" "),_("h5",{attrs:{id:"微前端"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#微前端"}},[t._v("#")]),t._v(" 微前端")])])])]),t._v(" "),_("h2",{attrs:{id:"二、核心思维"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、核心思维"}},[t._v("#")]),t._v(" 二、核心思维")]),t._v(" "),_("ul",[_("li",[t._v("技术不可知主义")]),t._v(" "),_("li",[t._v("隔离团队间的代码")]),t._v(" "),_("li",[t._v("建立团队自己的前缀")]),t._v(" "),_("li",[t._v("原生浏览器标准优于框架封装的"),_("code",[t._v("API")])]),t._v(" "),_("li",[t._v("构建高可用的应用")])]),t._v(" "),_("h2",{attrs:{id:"三、概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、概念"}},[t._v("#")]),t._v(" 三、概念")]),t._v(" "),_("blockquote",[_("p",[t._v("构建一个现代Web应用所需要的技术、策略和方法，具备多个团队独立开发、部署的特性 -- "),_("a",{attrs:{href:"https://swearer23.github.io/micro-frontends/",target:"_blank",rel:"noopener noreferrer"}},[_("code",[t._v("Micro Frontends")]),t._v("官网"),_("OutboundLink")],1)])]),t._v(" "),_("p",[t._v("从"),_("a",{attrs:{href:"https://micro-frontends.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Micro Frontends 官网"),_("OutboundLink")],1),t._v("可以了解到，微前端概念是从"),_("strong",[t._v("微服")]),t._v("务概念扩展而来的，摒弃大型单体方式，将前端整体分解为小而简单的块，这些块可以"),_("strong",[t._v("独立开发、测试和部署")]),t._v("，同时仍然"),_("strong",[t._v("聚合")]),t._v("为一个产品出现在客户面前。可以理解微前端是一种将多个"),_("strong",[t._v("可独立交付")]),t._v("的小型前端应用"),_("strong",[t._v("聚合")]),t._v("为一个整体的"),_("strong",[t._v("架构风格")]),t._v("。")]),t._v(" "),_("p",[t._v("值得留意的几个点：")]),t._v(" "),_("ul",[_("li",[t._v("微前端"),_("strong",[t._v("不是一门具体的技术")]),t._v("，而是整合了技术、策略和方法，可能会以脚手架、辅助插件和规范约束这种"),_("strong",[t._v("生态圈")]),t._v("形式展示出来，是一种宏观上的"),_("strong",[t._v("架构")]),t._v("。这种架构目前有"),_("strong",[t._v("多种方案")]),t._v("，都有利弊之处，但只要适用当前业务场景的就是好方案。")]),t._v(" "),_("li",[t._v("微前端并"),_("strong",[t._v("没有技术栈的约束")]),t._v("。每一套微前端方案的设计，都是基于实际需求出发。如果是多团队统一使用了react技术栈，可能对微前端方案的跨技术栈使用并没有要求；如果是多团队同时使用了react和"),_("code",[t._v("vue")]),t._v("技术栈，可能就对微前端的跨技术栈要求比较高。")])]),t._v(" "),_("h2",{attrs:{id:"四、优势"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四、优势"}},[t._v("#")]),t._v(" 四、优势")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("同步更新")])]),t._v(" "),_("li",[_("p",[t._v("增量升级")])]),t._v(" "),_("li",[_("p",[t._v("简单、解耦的代码库")])]),t._v(" "),_("li",[_("p",[t._v("独立部署")])]),t._v(" "),_("li",[_("p",[t._v("自主的团队")])])]),t._v(" "),_("h2",{attrs:{id:"五、微前端方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#五、微前端方案"}},[t._v("#")]),t._v(" 五、微前端方案")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("基座模式")]),t._v(" "),_("p",[t._v("通过搭建基座、配置中心来管理子应用。如基于"),_("code",[t._v("Single Spa")]),t._v("的乾坤方案")])]),t._v(" "),_("li",[_("p",[t._v("自组织模式")]),t._v(" "),_("p",[t._v("通过约定进行互调，但会遇到处理第三方依赖等问题")])]),t._v(" "),_("li",[_("p",[t._v("去中心模式")]),t._v(" "),_("p",[t._v("脱离基座模式，每个应用之间都可以彼此分享资源。基于"),_("code",[t._v("Webpack 5 Module Federation")]),t._v("实现的"),_("a",{attrs:{href:"https://github.com/efoxTeam/emp",target:"_blank",rel:"noopener noreferrer"}},[t._v("EMP微前端方案"),_("OutboundLink")],1)])])]),t._v(" "),_("h2",{attrs:{id:"六、《多方案深入对比分析》"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#六、《多方案深入对比分析》"}},[t._v("#")]),t._v(" 六、"),_("a",{attrs:{href:"https://github.com/efoxTeam/emp/wiki/%E3%80%8A%E5%AF%B9%E6%AF%94%E5%A4%9A%E7%A7%8D%E5%BE%AE%E5%89%8D%E7%AB%AF%E6%96%B9%E6%A1%88%E3%80%8B",target:"_blank",rel:"noopener noreferrer"}},[t._v("《多方案深入对比分析》"),_("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=e.exports}}]);