(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{411:function(t,s,e){"use strict";e.r(s);var r=e(51),a=Object(r.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"关于-this"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于-this"}},[t._v("#")]),t._v(" 关于 "),e("code",[t._v("this")])]),t._v(" "),e("h4",{attrs:{id:"为什么要使用-this"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用-this"}},[t._v("#")]),t._v(" 为什么要使用 "),e("code",[t._v("this")])]),t._v(" "),e("p",[t._v("隐式 "),e("strong",[t._v("传递")]),t._v(" 一个对象的 "),e("strong",[t._v("引用")])]),t._v(" "),e("blockquote",[e("p",[t._v("this 提供了一种更优雅的方式来隐式“传递”一个对象引用，因此可以将 API 设计 得更加简洁并且易于复用。")]),t._v(" "),e("p",[t._v("随着你的使用模式越来越复杂，显式传递上下文对象会让代码变得越来越混乱，使用 this 则不会这样。当我们介绍对象和原型时，你就会明白函数可以自动引用合适的上下文对象 有多重要。")])]),t._v(" "),e("hr")])}),[],!1,null,null,null);s.default=a.exports}}]);